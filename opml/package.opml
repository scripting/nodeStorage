<?xml version="1.0" encoding="ISO-8859-1"?>
<opml version="2.0">
	<head>
		<title>package.md</title>
		<dateModified>&lt;%dateModified%></dateModified>
		<expansionState></expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>300</windowTop>
		<windowLeft>700</windowLeft>
		<windowBottom>900</windowBottom>
		<windowRight>1500</windowRight>
		</head>
	<body text="package.md">
		<outline text="# Making nodeStorage a real package">
			<outline text="In 2020, it's time to make the lowest level module in my system a package. "></outline>
			</outline>
		<outline text="### Background">
			<outline text="nodeStorage was one of the first modules I wrote in Node, before I started using packages to modularize my work. "></outline>
			<outline text="As a result, I created instances of the nodeStorage by downloading the repo, and renaming storage.js. Not a very easy to maintain approach because updating means repeating the initial process, every time. And I often don't do it, and old versions get left laying around. "></outline>
			<outline text="Now in 2020 I know all about packages, and it's time to make this a package too. And I can do it without breaking anything. "></outline>
			</outline>
		<outline text="### What changed">
			<outline text="There's a new file called main.js. It defines the package.  "></outline>
			<outline text="In package.json the &quot;main&quot; property points to this file, so when you're using the package, that's what you get."></outline>
			<outline text="storage.js uses the package, and has the exact functionality of storage.js in previous versions. "></outline>
			</outline>
		<outline text="### How to migrate">
			<outline text="When it's time to migrate an instance, just repeat the process you used the previous times. ">
				<outline text="1. Download the package."></outline>
				<outline text="2. The code you need is in the example folder. Copy the two files into your app's folder."></outline>
				<outline text="3. Edit app.js to the name of your app, and update package.json accordingly."></outline>
				<outline text="4. You can delete the other files."></outline>
				<outline text="5. At the command line, enter npm install."></outline>
				<outline text="6. You still have to have a config.json file as before. "></outline>
				</outline>
			<outline text="Next time you want to update to the latest version, you just have to do an npm update. No changes to files, no renaming things. "></outline>
			</outline>
		<outline text="### Test case">
			<outline text="I'm doing the test case with the back-end for friends.farm, which is just a nodeStorage instance. "></outline>
			</outline>
		</body>
	</opml>
